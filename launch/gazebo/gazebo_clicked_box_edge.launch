<launch>
  <arg name="gui" default="true"/>
  <arg name="use_sim" default="true"/>
  
  <arg unless="$(arg use_sim)" name="RGB_CAMERA_INFO" value="/kinect_head/rgb/camera_info"/>
  <arg if="$(arg use_sim)" name="RGB_CAMERA_INFO" value="/head_mount_kinect/rgb/camera_info"/>
  <!--arg name="RGB_CAMERA_INFO" value="/head_mount_kinect/rgb/camera_info"/-->
  
  <arg unless="$(arg use_sim)" name="DEPTH_CAMERA_INFO" value="/kinect_head/depth/camera_info"/>
  <arg if="$(arg use_sim)" name="DEPTH_CAMERA_INFO" value="/head_mount_kinect/depth/camera_info"/>
  
  <arg unless="$(arg use_sim)" name="DEPTH_TOPIC" value="/kinect_head/depth_registered/image_rect"/>
  <arg if="$(arg use_sim)" name="DEPTH_TOPIC" value="/head_mount_kinect/depth/image_raw"/>

  <arg unless="$(arg use_sim)" name="RGB_IMAGE" value="/kinect_head_remote/rgb/image_rect_color"/>
  <arg if="$(arg use_sim)" name="RGB_IMAGE" value="/head_mount_kinect/rgb/image_raw"/>

  <node name="sample_manager"
        pkg="nodelet" type="nodelet"
        args="manager"/>
  
  <!--group if="$(arg use_sim)"-->
  <!--include file="$(find jsk_2020_4_carry_dish)/launch/gazebo/gazebo_virtual_camera_mono.launch"-->
      <!--arg name="RGB_IMAGE" value="$(arg RGB_IMAGE)"/-->
      <!--arg name="RGB_CAMERA_INFO" value="$(arg RGB_CAMERA_INFO)"/-->
  <!--/include-->
  <!--/group-->

  <group if="$(arg use_sim)">
      <node name="depth_save"
          pkg="jsk_2020_4_carry_dish" type="gazebo_depth_save.py">
      </node> 
      <include file="$(find jsk_2020_4_carry_dish)/launch/gazebo/gazebo_virtual_camera_mono.launch" />
  </group>
  <group unless="$(arg use_sim)">
      <node name="depth_save"
          pkg="jsk_2020_4_carry_dish" type="depth_save.py" args="$(arg DEPTH_TOPIC)">
      </node> 

      <include file="$(find jsk_2020_4_carry_dish)/launch/virtual_camera_mono.launch" />
  </group>

  <node name="depth_image_creator"
        pkg="nodelet" type="nodelet"
        args="standalone jsk_pcl/DepthImageCreator">
    <remap from="~input" to="/segmentation_decomposer/debug_output"/>
    <remap from="~info" to="$(arg RGB_CAMERA_INFO)" />
    <rosparam>
      use_approximate: true
      max_queue_size: 100
      max_pub_queue_size: 1
      max_sub_queue_size: 1
      organize_cloud: True
    </rosparam>
  </node>

  <group ns="/segmentation_decomposer">
    <node name="pointcloud_xyzrgb_to_xyz"
          pkg="nodelet" type="nodelet"
          args="standalone jsk_pcl_utils/PointCloudXYZRGBToXYZ">
      <remap from="~input" to="debug_output" />
    </node>
    <node name="depth_image_creator"
          pkg="nodelet" type="nodelet"
          args="standalone jsk_pcl/DepthImageCreator">
      <remap from="~input" to="pointcloud_xyzrgb_to_xyz/output" />
      <remap from="~info" to="$(arg RGB_CAMERA_INFO)" />
      <rosparam>
        use_approximate: true
        max_queue_size: 100 
        max_pub_queue_size: 1
        max_sub_queue_size: 1
        organize_cloud: True
      </rosparam>
    </node>
  </group>
 
  <node name="organized_edge_detector"
         pkg="nodelet" type="nodelet"
        args="load jsk_pcl/OrganizedEdgeDetector sample_manager">
        <remap from="~input" to="/selected_pointcloud"/>
    <rosparam>
      publish_normal: true
      use_nan_boundary: true
      use_rgb: true
    </rosparam>
  </node>

  <node name="supervoxel_segmentation"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/SupervoxelSegmentation sample_manager">
        <remap from="~input" to="/organized_edge_detector/output"/>
    <rosparam>
      seed_resolution: 0.5
    </rosparam>
  </node>

  <node name="publish_grasp_point"
      pkg="jsk_2020_4_carry_dish" type="gazebo_pub_grasp_point.py" args="$(arg use_sim)">
  </node>    
  <include file="$(find jsk_2020_4_carry_dish)/launch/gazebo/gazebo_depth_data_collection.launch" >
      <arg name="use_sim" value="$(arg use_sim)"/>
  </include>

  <include file="$(find jsk_2020_4_carry_dish)/launch/gazebo/gazebo_grasp_data_collection.launch" >
      <arg name="use_sim" value="$(arg use_sim)"/>
  </include>
  
  <group if="$(arg gui)">
    <node name="normal_concatenater"
          pkg="nodelet" type="nodelet"
          args="load jsk_pcl_utils/NormalConcatenater sample_manager">
          <remap from="~input" to="/depth_image_creator/output_cloud"/>
      <remap from="~normal" to="organized_edge_detector/output_normal"/>
    </node>

    <node name="rviz"
          pkg="rviz" type="rviz"
          args="-d $(find jsk_2020_4_carry_dish)/config/organized_edge_detector.rviz"/>
  </group>
</launch>
